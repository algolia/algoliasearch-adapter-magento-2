<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
    <preference for="Algolia\SearchAdapter\Api\Data\PaginatedResultInterface" type="Algolia\SearchAdapter\Model\Data\PaginatedResult" />
    
    <type name="Magento\Search\Model\EngineResolver">
        <arguments>
            <argument name="engines" xsi:type="array">
                <item name="algolia" xsi:type="string">algolia</item>
            </argument>
            <argument name="defaultEngine" xsi:type="string">algolia</argument>
        </arguments>
    </type>
    <type name="Magento\Search\Model\Adminhtml\System\Config\Source\Engine">
        <arguments>
            <argument name="engines" xsi:type="array">
                <item sortOrder="30" name="algolia" xsi:type="string">Algolia Backend Search</item>
            </argument>
        </arguments>
    </type>
    <type name="Magento\CatalogSearch\Model\ResourceModel\EngineProvider">
        <arguments>
            <argument name="engines" xsi:type="array">
                <item name="algolia" xsi:type="string">Algolia\SearchAdapter\Model\ResourceModel\Engine</item>
            </argument>
        </arguments>
    </type>

    <type name="Magento\Search\Model\AdapterFactory">
        <arguments>
            <argument name="adapters" xsi:type="array">
                <item name="algolia" xsi:type="string">Algolia\SearchAdapter\Model\Adapter</item>
            </argument>
        </arguments>
    </type>

    <!-- catalogsearch_fulltext index -->
    <type name="Magento\CatalogSearch\Model\Indexer\IndexerHandlerFactory">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="algolia" xsi:type="string">Algolia\SearchAdapter\Model\Indexer\IndexerHandler</item>
            </argument>
        </arguments>
    </type>

    <!-- AdvancedSearch client resolver for Algolia backend search configuration -->
    <type name="Magento\AdvancedSearch\Model\Client\ClientResolver">
        <arguments>
            <argument name="clientFactories" xsi:type="array">
                <item name="algolia" xsi:type="string">Algolia\SearchAdapter\Model\Client\AlgoliaSearchFactory</item>
            </argument>
            <argument name="clientOptions" xsi:type="array">
                <item name="algolia" xsi:type="string">Algolia\SearchAdapter\Model\Config</item>
            </argument>
        </arguments>
    </type>
    <virtualType name="Algolia\SearchAdapter\Model\Client\AlgoliaSearchFactory" type="Magento\AdvancedSearch\Model\Client\ClientFactory">
        <arguments>
            <argument name="clientClass" xsi:type="string">Algolia\SearchAdapter\Model\SearchClient</argument>
        </arguments>
    </virtualType>

    <!-- ############################################################################################################ -->
    <!-- BEGIN virtual collections -->
    <!-- ############################################################################################################ -->

    <virtualType name="algoliaTotalRecordsResolver\Factory" type="Magento\CatalogSearch\Model\ResourceModel\Fulltext\Collection\TotalRecordsResolverFactory">
        <arguments>
            <argument name="instanceName" xsi:type="string">Algolia\SearchAdapter\Model\ResourceModel\Fulltext\Collection\TotalRecordsResolver</argument>
        </arguments>
    </virtualType>

    <!-- TODO: Implement resolvers / appliers as needed -->
    <virtualType name="algoliaFulltextSearchCollection" type="Magento\CatalogSearch\Model\ResourceModel\Fulltext\Collection">
        <arguments>
            <argument name="searchRequestName" xsi:type="string">quick_search_container</argument>
            <argument name="totalRecordsResolverFactory" xsi:type="object">algoliaTotalRecordsResolver\Factory</argument>
        </arguments>
    </virtualType>
    <virtualType name="algoliaFulltextSearchCollectionFactory" type="Magento\CatalogSearch\Model\ResourceModel\Fulltext\SearchCollectionFactory">
        <arguments>
            <argument name="instanceName" xsi:type="string">algoliaFulltextSearchCollection</argument>
        </arguments>
    </virtualType>

    <!-- Categories -->
    <!-- TODO: Implement resolvers / appliers as needed -->
    <virtualType name="algoliaCategoryCollection" type="Magento\CatalogSearch\Model\ResourceModel\Fulltext\Collection">
        <arguments>
            <argument name="searchRequestName" xsi:type="string">catalog_view_container</argument>
            <argument name="totalRecordsResolverFactory" xsi:type="object">algoliaTotalRecordsResolver\Factory</argument>
        </arguments>
    </virtualType>
    <virtualType name="algoliaCategoryCollectionFactory" type="Magento\CatalogSearch\Model\ResourceModel\Fulltext\SearchCollectionFactory">
        <arguments>
            <argument name="instanceName" xsi:type="string">algoliaCategoryCollection</argument>
        </arguments>
    </virtualType>

    <!-- ############################################################################################################ -->
    <!-- END virtual collections -->
    <!-- ############################################################################################################ -->

    <!-- The Algolia adapter implementation relies on core Elasticsearch plumbing to inject the engine -->
    <virtualType name="elasticsearchLayerSearchItemCollectionProvider" type="Magento\Elasticsearch\Model\Layer\Search\ItemCollectionProvider">
        <arguments>
            <argument name="factories" xsi:type="array">
                <item name="algolia" xsi:type="object">algoliaFulltextSearchCollectionFactory</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="elasticsearchLayerCategoryItemCollectionProvider" type="Magento\Elasticsearch\Model\Layer\Category\ItemCollectionProvider">
        <arguments>
            <argument name="factories" xsi:type="array">
                <item name="algolia" xsi:type="object">algoliaCategoryCollectionFactory</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- If Elasticsearch is disabled other DI must be enabled -->
    <!-- TODO: Ensure that injections can still work without Elastic -->
    <virtualType name="Algolia\SearchAdapter\Model\Layer\Search\Context" type="Magento\Catalog\Model\Layer\Search\Context">
        <arguments>
            <!-- TODO: Inject here the Algolia collection provider TBD -->
            <argument name="collectionProvider" xsi:type="object">elasticsearchLayerSearchItemCollectionProvider</argument>
            <argument name="stateKey" xsi:type="object">Magento\CatalogSearch\Model\Layer\Search\StateKey</argument>
        </arguments>
    </virtualType>

    <!-- Uncomment to inject Algolia into the layer model - if ElasticSearch is fully uninstalled -->
<!--    <type name="Magento\Catalog\Model\Layer\Search">-->
<!--        <arguments>-->
<!--            <argument name="context" xsi:type="object">Algolia\SearchAdapter\Model\Layer\Search\Context</argument>-->
<!--        </arguments>-->
<!--    </type>-->


    <!-- Temp fallback to Elasticsearch aggregators / mappers - this will all be reimplemented -->
    <type name="Magento\Framework\Search\Dynamic\IntervalFactory">
        <arguments>
            <argument name="intervals" xsi:type="array">
                <item name="algolia" xsi:type="string">Magento\Elasticsearch\Elasticsearch5\SearchAdapter\Aggregation\Interval</item>
            </argument>
        </arguments>
    </type>

    <type name="Magento\Elasticsearch\Elasticsearch5\Model\Adapter\FieldMapper\ProductFieldMapperProxy">
        <arguments>
            <argument name="productFieldMappers" xsi:type="array">
                <item name="algolia" xsi:type="object">Algolia\SearchAdapter\Model\Adapter\FieldMapper\ProductFieldMapper</item>
            </argument>
        </arguments>
    </type>
    <virtualType name="Algolia\SearchAdapter\Model\Adapter\FieldMapper\ProductFieldMapper"
                 type="Magento\Elasticsearch\Elasticsearch5\Model\Adapter\FieldMapper\ProductFieldMapper">
        <arguments>
            <argument name="fieldProvider" xsi:type="object">elasticsearch5FieldProvider</argument>
            <argument name="fieldNameResolver" xsi:type="object">Algolia\SearchAdapter\Model\Adapter\FieldMapper\Product\FieldProvider\FieldName\Resolver\CompositeResolver</argument>
        </arguments>
    </virtualType>
    <virtualType name="Algolia\SearchAdapter\Model\Adapter\FieldMapper\Product\FieldProvider\FieldName\Resolver\CompositeResolver"
                 type="Magento\Elasticsearch\Model\Adapter\FieldMapper\Product\FieldProvider\FieldName\Resolver\CompositeResolver">
        <arguments>
            <argument name="items" xsi:type="array">
                <item name="notEav" xsi:type="object" sortOrder="10">\Magento\Elasticsearch\Model\Adapter\FieldMapper\Product\FieldProvider\FieldName\Resolver\NotEavAttribute</item>
                <item name="special" xsi:type="object" sortOrder="20">\Magento\Elasticsearch\Model\Adapter\FieldMapper\Product\FieldProvider\FieldName\Resolver\SpecialAttribute</item>
                <item name="price" xsi:type="object" sortOrder="30">\Magento\Elasticsearch\Model\Adapter\FieldMapper\Product\FieldProvider\FieldName\Resolver\Price</item>
                <item name="categoryName" xsi:type="object" sortOrder="40">\Magento\Elasticsearch\Model\Adapter\FieldMapper\Product\FieldProvider\FieldName\Resolver\CategoryName</item>
                <item name="position" xsi:type="object" sortOrder="50">\Magento\Elasticsearch\Model\Adapter\FieldMapper\Product\FieldProvider\FieldName\Resolver\Position</item>
                <item name="default" xsi:type="object" sortOrder="100">Magento\OpenSearch\Model\Adapter\FieldMapper\Product\FieldProvider\FieldName\Resolver\DefaultResolver</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="Algolia\SearchAdapter\Model\DataProvider\Suggestions" type="Magento\Elasticsearch\Model\DataProvider\Base\Suggestions">
        <arguments>
            <argument name="fieldProvider" xsi:type="object">elasticsearch5FieldProvider</argument>
        </arguments>
    </virtualType>
    <type name="Magento\AdvancedSearch\Model\SuggestedQueries">
        <arguments>
            <argument name="data" xsi:type="array">
                <item name="algolia" xsi:type="string">Algolia\SearchAdapter\Model\DataProvider\Suggestions</item>
            </argument>
        </arguments>
    </type>


</config>
